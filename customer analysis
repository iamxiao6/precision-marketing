USE 0005285040_pos;

#店铺总的平均情况
SELECT MIN(a.bill_date) AS'合作日期',ROUND(AVG(count1),0) AS '订单数',ROUND(AVG(money),0) AS '营业额',ROUND(c,0) AS '客单价',ROUND(AVG(pay),0) AS '人均消费',ROUND(AVG(people_num),0) AS '到店人数'
FROM (SELECT LEFT(bill_date,10) AS bill_date,COUNT(1) AS count1,SUM(people_num) AS people_num,SUM(need_pay_amount) AS money,SUM(need_pay_amount)/SUM(people_num)  AS pay,AVG(need_pay_amount) AS c
FROM pos_consumption WHERE bill_date >'2010-01-01' AND status_code=1 GROUP BY LEFT(bill_date,10)) a;




##星期一到星期日的订单
SELECT b.organization_name AS '店名',CASE DAYOFWEEK(a.created_on) WHEN 1 THEN '星期日'
WHEN 2 THEN '星期一'
WHEN 3 THEN '星期二'
WHEN 4 THEN '星期三'
WHEN 5 THEN '星期四'
WHEN 6 THEN '星期五'
WHEN 7 THEN '星期六'
END AS '星期'
,COUNT(1) AS'该天总订单数',ROUND(AVG(need_pay_amount),0) AS '平均每单应付',ROUND(AVG(people_num),1)AS '平均每单人数',ROUND(SUM(need_pay_amount)/SUM(people_num),0)AS'人均消费' FROM pos_consumption a INNER JOIN (SELECT created_on,organization_name,organization_id FROM 0005285040_baseinfo.bi_organization 
WHERE status_code=1) b ON a.created_org=b.organization_id
WHERE a.status_code=1
AND a.created_on>'2017-09-01'
#and a.created_org=3 #要查的商家名字
GROUP BY a.created_org,FIELD(星期,'星期一','星期二','星期三','星期四','星期五','星期六','星期日');

#查看时间点的消费情况(按订单创建时间)
SELECT b.organization_name AS '店名',SUBSTRING(a.created_on,12,2) AS'时间点',COUNT(1) AS'总订单数',ROUND(AVG(need_pay_amount),0) AS '平均每单应付',ROUND(AVG(people_num),1)AS '平均每单人数',ROUND(SUM(need_pay_amount)/SUM(people_num),0)AS'人均消费'  FROM pos_consumption a INNER JOIN (SELECT created_on,organization_name,organization_id FROM 0005285040_baseinfo.bi_organization 
WHERE status_code=1) b ON a.created_org=b.organization_id
WHERE a.status_code=1
AND a.created_on>'2017-09-01'
#and a.created_org=3 #要查的商家名字
GROUP BY a.created_org,SUBSTRING(a.created_on,12,2);

##菜品销量排行
SELECT b.organization_name AS '店名',a.created_org,dish_name,ROUND(SUM(dish_num),0) AS '消费数量' FROM pos_order_dish a INNER JOIN (SELECT created_on,organization_name,organization_id FROM 0005285040_baseinfo.bi_organization 
WHERE status_code=1) b ON a.created_org=b.organization_id
WHERE a.dish_num>0
AND a.created_on>'2017-11-01' #取时间大于某个维度的
#and a.created_org=3 #要查的商家名字
GROUP BY a.created_org,a.dish_name
ORDER BY 消费数量 DESC;

##大多数用户享受的商家折扣
SELECT b.organization_name AS '店名',a.created_org AS'店铺ID',discount AS '商家折扣',COUNT(1) AS '统计总数' FROM (SELECT created_org,ROUND(need_pay_amount/money,2) AS discount FROM pos_consumption WHERE status_code=1 GROUP BY consumption_id ) a
INNER JOIN (SELECT created_on,organization_name,organization_id FROM 0005285040_baseinfo.bi_organization 
WHERE status_code=1) b ON a.created_org=b.organization_id
WHERE discount>0.2
#and a.created_org=3 #要查的商家名字
GROUP BY a.created_org,discount
ORDER BY a.created_org,统计总数 DESC;


##会员结构
#按就餐次数和就餐消费金额区分用户
SELECT SUM(need_pay_amount)/COUNT(0) INTO @avg1 FROM pos_consumption WHERE status_code=1 AND member_id !=0;

SELECT SUM(porder_date_calc.datedif)/SUM(porder_date_calc.con_cou) *1.5 INTO @avg_pay FROM (
SELECT DATEDIFF(MAX(porder.bill_date), MIN(porder.bill_date)) AS datedif,COUNT(0)-1 AS con_cou
FROM pos_dining_order AS porder
INNER JOIN `rv_ol_fans` AS fan ON fan.`member_id` = porder.member_id
WHERE  porder.`status_code`=1 AND porder.member_id<>0 AND porder.member_id<>1 
GROUP BY porder.member_id
HAVING COUNT(0)>1
)
AS porder_date_calc;


SELECT member_con_type AS '用户类型',COUNT(1) AS '会员数',ROUND(COUNT(1)/zzz,2) AS '占比' FROM (
SELECT * FROM (
SELECT 
member_count.member_id,
member_count.sum_all AS sum_all,
member_days.member_con_type,
0 AS bill_date



FROM (
SELECT fan.member_id, abc.sum_all FROM (
SELECT member_id, COUNT(0) AS sum_all FROM   `pos_consumption` AS conn
WHERE conn.`status_code`=1 AND member_id<>0  AND conn.order_property=1
GROUP BY conn.member_id
HAVING COUNT(0)>=2 ORDER BY COUNT(0) DESC) AS abc
INNER JOIN `rv_ol_fans` AS fan  ON fan.`member_id`= abc.member_id
INNER JOIN `0005285040_baseinfo`.`ol_fans_sns_bind` AS bind USE INDEX (idx_fans_id) ON fan.fans_id=bind.fans_id AND bind.sns_type=1 AND is_subscribed=1
) AS member_count 

LEFT JOIN `0005285040_member`.`mem_card` AS mcard ON mcard.member_id = member_count.member_id 

#用户细分
LEFT JOIN (
SELECT porder.member_id, COUNT(0) AS sum_all,
         

          CASE WHEN COUNT(0)>2 AND DATEDIFF(NOW(), MAX(porder.bill_date))<= DATEDIFF(MAX(porder.bill_date), MIN(porder.bill_date))/ (COUNT(0) - 1)*1.5
            THEN '忠诚用户1'
            WHEN COUNT(0)=2 AND DATEDIFF(NOW(), MAX(porder.bill_date))<= @avg_pay
            THEN '忠诚用户2'
            WHEN COUNT(0)>2 AND DATEDIFF(NOW(), MAX(porder.bill_date))> DATEDIFF(MAX(porder.bill_date), MIN(porder.bill_date))/ (COUNT(0) - 1)*1.5
            THEN '沉睡用户1'
            WHEN COUNT(0)=2 AND DATEDIFF(NOW(), MAX(porder.bill_date))> @avg_pay
            THEN '沉睡用户2'
            ELSE '' 
          END
          AS 'member_con_type',0 AS bill_date
  FROM pos_consumption AS porder
       INNER JOIN `rv_ol_fans` AS fan ON fan.`member_id` = porder.member_id
       INNER JOIN `0005285040_baseinfo`.`ol_fans_sns_bind` AS bind USE INDEX (idx_fans_id) ON fan.fans_id=bind.fans_id   AND bind.sns_type=1 AND is_subscribed=1
 WHERE porder.`status_code` = 1 AND porder.member_id <> 0
 AND porder.order_property=1
GROUP BY porder.member_id
HAVING COUNT(0) > 1
) AS member_days ON member_days.member_id=member_count.member_id




UNION ALL
#普通会员   消费次数=1次，消费间隔<=平均沉睡周期

SELECT conn.member_id ,  COUNT(0) AS sum_all,'普通用户' AS member_con_type,conn.bill_date
FROM   `pos_consumption` AS conn
INNER JOIN `rv_ol_fans` AS fan  ON fan.`member_id`= conn.member_id
INNER JOIN `0005285040_baseinfo`.`ol_fans_sns_bind` AS bind USE INDEX (idx_fans_id)  ON fan.fans_id=bind.fans_id   AND bind.sns_type=1 AND is_subscribed=1
LEFT JOIN `0005285040_member`.`mem_card` AS mcard ON mcard.member_id = fan.member_id 
WHERE conn.`status_code`=1 AND conn.member_id<>0 
 AND conn.order_property=1
GROUP BY conn.member_id
HAVING COUNT(0)=1 AND DATEDIFF(NOW(),conn.bill_date)<=@avg_pay

UNION ALL

#流失会员   消费次数=1次，消费间隔>平均沉睡周期
SELECT conn.member_id,   COUNT(0) AS sum_all,'流失用户'AS member_con_type ,conn.bill_date 
FROM   `pos_consumption` AS conn
INNER JOIN `rv_ol_fans` AS fan  ON fan.`member_id`= conn.member_id
INNER JOIN `0005285040_baseinfo`.`ol_fans_sns_bind` AS bind USE INDEX (idx_fans_id) ON fan.fans_id=bind.fans_id   AND bind.sns_type=1 AND is_subscribed=1
LEFT JOIN `0005285040_member`.`mem_card` AS mcard ON mcard.member_id = fan.member_id 
WHERE conn.`status_code`=1 AND conn.member_id<>0 
AND conn.order_property=1
GROUP BY conn.member_id
HAVING COUNT(0)=1   AND DATEDIFF(NOW(),conn.bill_date)>@avg_pay 

UNION ALL

#陪同用户，没有消费记录
SELECT  
 fan.member_id,   0 AS sum_all ,'陪同用户' AS member_con_type , 0 AS bill_date
FROM    `rv_ol_fans` AS fan 
INNER JOIN `0005285040_baseinfo`.`ol_fans_sns_bind` AS bind USE INDEX (idx_fans_id) ON fan.fans_id=bind.fans_id   AND bind.sns_type=1 AND is_subscribed=1
LEFT JOIN pos_consumption AS conn ON conn.member_id=fan.member_id
LEFT JOIN `0005285040_member`.`mem_card` AS mcard ON mcard.member_id = fan.member_id 
WHERE  fan.member_id<>0 AND  conn.member_id IS NULL AND fan.source_type IN(3,4,6,14,18,19)  # 来源类型（1-自行关注，2-通过砍价活动关注，3-通过扫描POS台单关注）

UNION ALL
#潜在用户，消费次数为0,非店内关注
SELECT  
 fan.member_id,   0 AS sum_all ,'潜在用户' AS member_con_type , 0 AS bill_date
FROM    `rv_ol_fans` AS fan 
INNER JOIN `0005285040_baseinfo`.`ol_fans_sns_bind` AS bind USE INDEX (idx_fans_id) ON fan.fans_id=bind.fans_id   AND bind.sns_type=1 AND is_subscribed=1
LEFT JOIN pos_consumption AS conn ON conn.member_id=fan.member_id
LEFT JOIN `0005285040_member`.`mem_card` AS mcard ON mcard.member_id = fan.member_id 
WHERE  fan.member_id<>0 AND  conn.member_id IS NULL AND fan.source_type NOT IN(3,4,6,14,18,19)

) a)  a ,(SELECT COUNT(1) AS zzz FROM rv_ol_fans AS fan  
INNER JOIN `0005285040_baseinfo`.`ol_fans_sns_bind` AS bind USE INDEX (idx_fans_id) ON fan.fans_id=bind.fans_id   AND bind.sns_type=1 AND is_subscribed=1
WHERE fan.member_id IS NOT NULL
AND fan.member_id <>0) b
GROUP BY member_con_type;


#当天取关人数占总关注比
SELECT a.quguan AS '取关用户',allguanzhu AS '所有关注',ROUND(quguan/allguanzhu,2) AS '取关占比' FROM (
    SELECT COUNT(1) AS quguan FROM `0005285040_baseinfo`.`ol_fans_sns_bind`a
   INNER JOIN `rv_ol_fans` AS fan ON fan.fans_id=a.fans_id
   LEFT JOIN (SELECT member_id,COUNT(1) AS sum_all,MAX(bill_date) AS bill_date FROM pos_consumption WHERE status_code=1  GROUP BY member_id) b ON fan.member_id=b.member_id
   WHERE b.member_id <>0
   AND LEFT(b.bill_date,10)=LEFT(a.subscribed_time,10)
   AND a.is_subscribed=0) a,(   SELECT COUNT(1) AS allguanzhu FROM `0005285040_baseinfo`.`ol_fans_sns_bind`a
   INNER JOIN `rv_ol_fans` AS fan ON fan.fans_id=a.fans_id
   LEFT JOIN (SELECT member_id,COUNT(1) AS sum_all,MAX(bill_date) AS bill_date FROM pos_consumption WHERE status_code=1  GROUP BY member_id) b ON fan.member_id=b.member_id
   WHERE b.member_id <>0
   AND LEFT(b.bill_date,10)=LEFT(a.subscribed_time,10)
 ) b;
 
 #商家日销售情况

SELECT LEFT(bill_date,10) AS '消费日期',
CASE DAYOFWEEK(bill_date) WHEN 1 THEN '星期日'
WHEN 2 THEN '星期一'
WHEN 3 THEN '星期二'
WHEN 4 THEN '星期三'
WHEN 5 THEN '星期四'
WHEN 6 THEN '星期五'
WHEN 7 THEN '星期六'
END AS '星期',
COUNT(DISTINCT consumption_id) AS '消费单数',SUM(people_num) AS '就餐人数',ROUND(AVG(need_pay_amount),0) AS '客单价',ROUND(SUM(need_pay_amount),0) AS '应付金额'
FROM pos_consumption WHERE status_code=1 AND need_pay_amount<>0 GROUP BY LEFT(bill_date,10);



